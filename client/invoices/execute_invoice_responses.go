package invoices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/authclub/billforward/models"
)

// ExecuteInvoiceReader is a Reader for the ExecuteInvoice structure.
type ExecuteInvoiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *ExecuteInvoiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewExecuteInvoiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewExecuteInvoiceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewExecuteInvoiceOK creates a ExecuteInvoiceOK with default headers values
func NewExecuteInvoiceOK() *ExecuteInvoiceOK {
	return &ExecuteInvoiceOK{}
}

/*ExecuteInvoiceOK handles this case with default header values.

success
*/
type ExecuteInvoiceOK struct {
	Payload *models.InvoicePagedMetadata
}

func (o *ExecuteInvoiceOK) Error() string {
	return fmt.Sprintf("[POST /invoices/{invoice-ID}/execute][%d] executeInvoiceOK  %+v", 200, o.Payload)
}

func (o *ExecuteInvoiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InvoicePagedMetadata)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecuteInvoiceDefault creates a ExecuteInvoiceDefault with default headers values
func NewExecuteInvoiceDefault(code int) *ExecuteInvoiceDefault {
	return &ExecuteInvoiceDefault{
		_statusCode: code,
	}
}

/*ExecuteInvoiceDefault handles this case with default header values.

error
*/
type ExecuteInvoiceDefault struct {
	_statusCode int

	Payload *models.BFError
}

// Code gets the status code for the execute invoice default response
func (o *ExecuteInvoiceDefault) Code() int {
	return o._statusCode
}

func (o *ExecuteInvoiceDefault) Error() string {
	return fmt.Sprintf("[POST /invoices/{invoice-ID}/execute][%d] executeInvoice default  %+v", o._statusCode, o.Payload)
}

func (o *ExecuteInvoiceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BFError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
