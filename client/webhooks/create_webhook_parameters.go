package webhooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/authclub/billforward/models"
)

// NewCreateWebhookParams creates a new CreateWebhookParams object
// with the default values initialized.
func NewCreateWebhookParams() *CreateWebhookParams {
	var ()
	return &CreateWebhookParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateWebhookParamsWithTimeout creates a new CreateWebhookParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateWebhookParamsWithTimeout(timeout time.Duration) *CreateWebhookParams {
	var ()
	return &CreateWebhookParams{

		timeout: timeout,
	}
}

/*CreateWebhookParams contains all the parameters to send to the API endpoint
for the create webhook operation typically these are written to a http.Request
*/
type CreateWebhookParams struct {

	/*Webhook
	  The webhook object to be created.

	*/
	Webhook *models.CreateWebhookRequest

	timeout time.Duration
}

// WithWebhook adds the webhook to the create webhook params
func (o *CreateWebhookParams) WithWebhook(webhook *models.CreateWebhookRequest) *CreateWebhookParams {
	o.Webhook = webhook
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *CreateWebhookParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Webhook == nil {
		o.Webhook = new(models.CreateWebhookRequest)
	}

	if err := r.SetBodyParam(o.Webhook); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
