// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DunningLine A dunning-line specifies when the next execution attempt of an unpaid invoice should take place given the number of existing execution attempts.
// swagger:model DunningLine

type DunningLine struct {

	// { "description" : "The payment attempt this dunning line applies to, specified as a positive integer. Dunning lines are ZERO indexed.", "verbs":["POST","PUT","GET"] }
	// Required: true
	AttemptIx *int32 `json:"attemptIx"`

	// { "description" : "ID of the user who last updated the entity.", "verbs":[] }
	ChangedBy string `json:"changedBy,omitempty"`

	// { "description" : "The UTC DateTime when the object was created.", "verbs":[] }
	Created strfmt.DateTime `json:"created,omitempty"`

	// { "description" : "Has the dunning-line been deleted?", "verbs":["POST","PUT","GET"] }
	// Required: true
	Deleted bool `json:"deleted"`

	// { "description" : "The payment gateway to use for this payment attempt.", "verbs":["POST","PUT","GET"] }
	// Required: true
	Gateway *string `json:"gateway"`

	// { "description" : "ID of the dunning-line.", "verbs":["GET"] }
	ID string `json:"id,omitempty"`

	// { "description" : "The time before the next payment attempt in minutes.", "verbs":["POST","PUT","GET"] }
	// Required: true
	MinutesDelay *int32 `json:"minutesDelay"`

	// { "description" : "organization associated with the dunning-line.", "verbs":["POST","PUT","GET"] }
	// Required: true
	Organization *Organization `json:"organization"`

	// { "description" : "ID of the organization associated with the dunning-line.", "verbs":["POST","PUT","GET"] }
	// Required: true
	OrganizationID *string `json:"organizationID"`

	// { "description" : "ID of the organization associated with the dunning-line.", "verbs":["POST","PUT","GET"] }
	// Required: true
	Type *string `json:"type"`

	// { "description" : "The UTC DateTime when the object was last updated.", "verbs":[] }
	Updated strfmt.DateTime `json:"updated,omitempty"`
}

/* polymorph DunningLine attemptIx false */

/* polymorph DunningLine changedBy false */

/* polymorph DunningLine created false */

/* polymorph DunningLine deleted false */

/* polymorph DunningLine gateway false */

/* polymorph DunningLine id false */

/* polymorph DunningLine minutesDelay false */

/* polymorph DunningLine organization false */

/* polymorph DunningLine organizationID false */

/* polymorph DunningLine type false */

/* polymorph DunningLine updated false */

// Validate validates this dunning line
func (m *DunningLine) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttemptIx(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDeleted(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGateway(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMinutesDelay(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOrganization(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOrganizationID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DunningLine) validateAttemptIx(formats strfmt.Registry) error {

	if err := validate.Required("attemptIx", "body", m.AttemptIx); err != nil {
		return err
	}

	return nil
}

func (m *DunningLine) validateDeleted(formats strfmt.Registry) error {

	if err := validate.Required("deleted", "body", bool(m.Deleted)); err != nil {
		return err
	}

	return nil
}

var dunningLineTypeGatewayPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["cybersource_token","card_vault","paypal_simple","locustworld","free","coupon","credit_note","stripe","braintree","balanced","paypal","billforward_test","offline","trial","stripeACH","authorizeNet","spreedly","sagePay","trustCommerce","payvision","kash"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dunningLineTypeGatewayPropEnum = append(dunningLineTypeGatewayPropEnum, v)
	}
}

const (
	// DunningLineGatewayCybersourceToken captures enum value "cybersource_token"
	DunningLineGatewayCybersourceToken string = "cybersource_token"
	// DunningLineGatewayCardVault captures enum value "card_vault"
	DunningLineGatewayCardVault string = "card_vault"
	// DunningLineGatewayPaypalSimple captures enum value "paypal_simple"
	DunningLineGatewayPaypalSimple string = "paypal_simple"
	// DunningLineGatewayLocustworld captures enum value "locustworld"
	DunningLineGatewayLocustworld string = "locustworld"
	// DunningLineGatewayFree captures enum value "free"
	DunningLineGatewayFree string = "free"
	// DunningLineGatewayCoupon captures enum value "coupon"
	DunningLineGatewayCoupon string = "coupon"
	// DunningLineGatewayCreditNote captures enum value "credit_note"
	DunningLineGatewayCreditNote string = "credit_note"
	// DunningLineGatewayStripe captures enum value "stripe"
	DunningLineGatewayStripe string = "stripe"
	// DunningLineGatewayBraintree captures enum value "braintree"
	DunningLineGatewayBraintree string = "braintree"
	// DunningLineGatewayBalanced captures enum value "balanced"
	DunningLineGatewayBalanced string = "balanced"
	// DunningLineGatewayPaypal captures enum value "paypal"
	DunningLineGatewayPaypal string = "paypal"
	// DunningLineGatewayBillforwardTest captures enum value "billforward_test"
	DunningLineGatewayBillforwardTest string = "billforward_test"
	// DunningLineGatewayOffline captures enum value "offline"
	DunningLineGatewayOffline string = "offline"
	// DunningLineGatewayTrial captures enum value "trial"
	DunningLineGatewayTrial string = "trial"
	// DunningLineGatewayStripeACH captures enum value "stripeACH"
	DunningLineGatewayStripeACH string = "stripeACH"
	// DunningLineGatewayAuthorizeNet captures enum value "authorizeNet"
	DunningLineGatewayAuthorizeNet string = "authorizeNet"
	// DunningLineGatewaySpreedly captures enum value "spreedly"
	DunningLineGatewaySpreedly string = "spreedly"
	// DunningLineGatewaySagePay captures enum value "sagePay"
	DunningLineGatewaySagePay string = "sagePay"
	// DunningLineGatewayTrustCommerce captures enum value "trustCommerce"
	DunningLineGatewayTrustCommerce string = "trustCommerce"
	// DunningLineGatewayPayvision captures enum value "payvision"
	DunningLineGatewayPayvision string = "payvision"
	// DunningLineGatewayKash captures enum value "kash"
	DunningLineGatewayKash string = "kash"
)

// prop value enum
func (m *DunningLine) validateGatewayEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, dunningLineTypeGatewayPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DunningLine) validateGateway(formats strfmt.Registry) error {

	if err := validate.Required("gateway", "body", m.Gateway); err != nil {
		return err
	}

	// value enum
	if err := m.validateGatewayEnum("gateway", "body", *m.Gateway); err != nil {
		return err
	}

	return nil
}

func (m *DunningLine) validateMinutesDelay(formats strfmt.Registry) error {

	if err := validate.Required("minutesDelay", "body", m.MinutesDelay); err != nil {
		return err
	}

	return nil
}

func (m *DunningLine) validateOrganization(formats strfmt.Registry) error {

	if err := validate.Required("organization", "body", m.Organization); err != nil {
		return err
	}

	if m.Organization != nil {

		if err := m.Organization.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("organization")
			}
			return err
		}
	}

	return nil
}

func (m *DunningLine) validateOrganizationID(formats strfmt.Registry) error {

	if err := validate.Required("organizationID", "body", m.OrganizationID); err != nil {
		return err
	}

	return nil
}

var dunningLineTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Invoice","Notification"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dunningLineTypeTypePropEnum = append(dunningLineTypeTypePropEnum, v)
	}
}

const (
	// DunningLineTypeInvoice captures enum value "Invoice"
	DunningLineTypeInvoice string = "Invoice"
	// DunningLineTypeNotification captures enum value "Notification"
	DunningLineTypeNotification string = "Notification"
)

// prop value enum
func (m *DunningLine) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, dunningLineTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DunningLine) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DunningLine) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DunningLine) UnmarshalBinary(b []byte) error {
	var res DunningLine
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
