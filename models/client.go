// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Client An oAuth2 client with which BillForward users may authenticate.
// swagger:model Client
type Client struct {

	// { "description" : "The amount of time in seconds that an access token for the client is valid.", "verbs":["POST","PUT","GET"] }
	// Required: true
	AccessTokenValiditySeconds *int32 `json:"accessTokenValiditySeconds"`

	// { "description" : "Authorities associated with the client.", "verbs":["POST","PUT","GET"] }
	// Required: true
	Authorities *string `json:"authorities"`

	// { "description" : "Oauth2 Grant Types which may be used when authenticating with the client.", "verbs":["POST","PUT","GET"] }
	// Required: true
	AuthorizedGrantTypes *string `json:"authorizedGrantTypes"`

	// { "description" : "ID of the user who last updated the entity.", "verbs":[] }
	ChangedBy string `json:"changedBy,omitempty"`

	// { "description" : "ID of the OAuth2 client.", "verbs":["POST","PUT","GET"] }
	ClientID string `json:"clientId,omitempty"`

	// { "description" : "Unique Client Secret of the client. This is used as the OAuth2 Client secret", "verbs":["POST","PUT","GET"] }
	// Required: true
	ClientSecret *string `json:"clientSecret"`

	// { "description" : "The UTC DateTime when the object was created.", "verbs":[] }
	Created strfmt.DateTime `json:"created,omitempty"`

	// { "description" : "Indicates if a client has been retired. If a client has been retired it can still be retrieved using the appropriate flag on API requests.", "verbs":["POST","PUT","GET"] }
	// Required: true
	Deleted bool `json:"deleted"`

	// { "description" : "Organization associated with the client.", "verbs":["POST","PUT","GET"] }
	// Required: true
	OrganizationID *string `json:"organizationID"`

	// { "description" : "The amount of time in seconds that a refresh token for the client is valid.", "verbs":["POST","PUT","GET"] }
	// Required: true
	RefreshTokenValiditySeconds *int32 `json:"refreshTokenValiditySeconds"`

	// { "description" : "Registered Redirect URIs associated with the client.", "verbs":["POST","PUT","GET"] }
	// Required: true
	RegisteredRedirectUris *string `json:"registeredRedirectUris"`

	// { "description" : "Resources associated with the client.", "verbs":["POST","PUT","GET"] }
	// Required: true
	ResourceIds *string `json:"resourceIds"`

	// { "description" : "Scopes associated with the client.", "verbs":["POST","PUT","GET"] }
	// Required: true
	Scope *string `json:"scope"`

	// { "description" : "The UTC DateTime when the object was last updated.", "verbs":[] }
	Updated strfmt.DateTime `json:"updated,omitempty"`
}

// Validate validates this client
func (m *Client) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessTokenValiditySeconds(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAuthorities(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAuthorizedGrantTypes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateClientSecret(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDeleted(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOrganizationID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRefreshTokenValiditySeconds(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRegisteredRedirectUris(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateResourceIds(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateScope(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Client) validateAccessTokenValiditySeconds(formats strfmt.Registry) error {

	if err := validate.Required("accessTokenValiditySeconds", "body", m.AccessTokenValiditySeconds); err != nil {
		return err
	}

	return nil
}

func (m *Client) validateAuthorities(formats strfmt.Registry) error {

	if err := validate.Required("authorities", "body", m.Authorities); err != nil {
		return err
	}

	return nil
}

func (m *Client) validateAuthorizedGrantTypes(formats strfmt.Registry) error {

	if err := validate.Required("authorizedGrantTypes", "body", m.AuthorizedGrantTypes); err != nil {
		return err
	}

	return nil
}

func (m *Client) validateClientSecret(formats strfmt.Registry) error {

	if err := validate.Required("clientSecret", "body", m.ClientSecret); err != nil {
		return err
	}

	return nil
}

func (m *Client) validateDeleted(formats strfmt.Registry) error {

	if err := validate.Required("deleted", "body", bool(m.Deleted)); err != nil {
		return err
	}

	return nil
}

func (m *Client) validateOrganizationID(formats strfmt.Registry) error {

	if err := validate.Required("organizationID", "body", m.OrganizationID); err != nil {
		return err
	}

	return nil
}

func (m *Client) validateRefreshTokenValiditySeconds(formats strfmt.Registry) error {

	if err := validate.Required("refreshTokenValiditySeconds", "body", m.RefreshTokenValiditySeconds); err != nil {
		return err
	}

	return nil
}

func (m *Client) validateRegisteredRedirectUris(formats strfmt.Registry) error {

	if err := validate.Required("registeredRedirectUris", "body", m.RegisteredRedirectUris); err != nil {
		return err
	}

	return nil
}

func (m *Client) validateResourceIds(formats strfmt.Registry) error {

	if err := validate.Required("resourceIds", "body", m.ResourceIds); err != nil {
		return err
	}

	return nil
}

func (m *Client) validateScope(formats strfmt.Registry) error {

	if err := validate.Required("scope", "body", m.Scope); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Client) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Client) UnmarshalBinary(b []byte) error {
	var res Client
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
