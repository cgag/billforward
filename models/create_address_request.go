// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateAddressRequest CreateAddressRequest
// swagger:model CreateAddressRequest

type CreateAddressRequest struct {

	// { "description" : "", "verbs":["POST","PUT","GET"] }
	// Required: true
	AddressLine1 *string `json:"addressLine1"`

	// { "description" : "", "verbs":["POST","PUT","GET"] }
	AddressLine2 string `json:"addressLine2,omitempty"`

	// { "description" : "", "verbs":["POST","PUT","GET"] }
	AddressLine3 string `json:"addressLine3,omitempty"`

	// { "description" : "", "verbs":["POST","PUT","GET"] }
	// Required: true
	City *string `json:"city"`

	// { "description" : "", "verbs":["POST","PUT","GET"] }
	// Required: true
	Country *string `json:"country"`

	// { "description" : "Phone number", "verbs":["POST","PUT","GET"] }
	Landline string `json:"landline,omitempty"`

	// { "description" : "ZIP code or postcode.", "verbs":["POST","PUT","GET"] }
	// Required: true
	Postcode *string `json:"postcode"`

	// { "description" : "Is this the primary, default, address for the associated profile?", "verbs":["POST","PUT","GET"] }
	PrimaryAddress *bool `json:"primaryAddress,omitempty"`

	// { "description" : "", "verbs":["GET"] }
	// Required: true
	ProfileID *string `json:"profileID"`

	// { "description" : "", "verbs":["POST","PUT","GET"] }
	// Required: true
	Province *string `json:"province"`
}

/* polymorph CreateAddressRequest addressLine1 false */

/* polymorph CreateAddressRequest addressLine2 false */

/* polymorph CreateAddressRequest addressLine3 false */

/* polymorph CreateAddressRequest city false */

/* polymorph CreateAddressRequest country false */

/* polymorph CreateAddressRequest landline false */

/* polymorph CreateAddressRequest postcode false */

/* polymorph CreateAddressRequest primaryAddress false */

/* polymorph CreateAddressRequest profileID false */

/* polymorph CreateAddressRequest province false */

// Validate validates this create address request
func (m *CreateAddressRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddressLine1(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCountry(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePostcode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateProfileID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateProvince(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateAddressRequest) validateAddressLine1(formats strfmt.Registry) error {

	if err := validate.Required("addressLine1", "body", m.AddressLine1); err != nil {
		return err
	}

	return nil
}

func (m *CreateAddressRequest) validateCity(formats strfmt.Registry) error {

	if err := validate.Required("city", "body", m.City); err != nil {
		return err
	}

	return nil
}

func (m *CreateAddressRequest) validateCountry(formats strfmt.Registry) error {

	if err := validate.Required("country", "body", m.Country); err != nil {
		return err
	}

	return nil
}

func (m *CreateAddressRequest) validatePostcode(formats strfmt.Registry) error {

	if err := validate.Required("postcode", "body", m.Postcode); err != nil {
		return err
	}

	return nil
}

func (m *CreateAddressRequest) validateProfileID(formats strfmt.Registry) error {

	if err := validate.Required("profileID", "body", m.ProfileID); err != nil {
		return err
	}

	return nil
}

func (m *CreateAddressRequest) validateProvince(formats strfmt.Registry) error {

	if err := validate.Required("province", "body", m.Province); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateAddressRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateAddressRequest) UnmarshalBinary(b []byte) error {
	var res CreateAddressRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
